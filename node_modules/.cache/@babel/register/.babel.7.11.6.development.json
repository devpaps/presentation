{
  "{\"sourceRoot\":\"/Users/Crymeat/Desktop/Code/cv/presentation/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Crymeat/Desktop/Code/cv/presentation\",\"filename\":\"/Users/Crymeat/Desktop/Code/cv/presentation/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Crymeat/Desktop/Code/cv/presentation\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Crymeat/Desktop/Code/cv/presentation/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Crymeat/Desktop/Code/cv/presentation",
      "filename": "/Users/Crymeat/Desktop/Code/cv/presentation/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Crymeat/Desktop/Code/cv/presentation",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Crymeat/Desktop/Code/cv/presentation/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Crymeat/Desktop/Code/cv/presentation/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Crymeat/Desktop/Code/cv/presentation/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar app = express();\n\nvar path = require('path');\n\nvar router = express.Router();\n\nvar fs = require('fs');\n\napp.set('view engine', 'ejs');\n\nvar bodyParser = require(\"body-parser\");\n\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\napp.set('views', path.join(__dirname, 'views'));\nvar port = process.env.PORT || 5000; //app.use('/artiklar', articleRouter)\n\napp.use('/css', express[\"static\"](__dirname + '/public/css'));\napp.use('/js', express[\"static\"](__dirname + '/public/js'));\napp.use('/modules', express[\"static\"](__dirname + '/public/js/modules'));\napp.use('/images', express[\"static\"](__dirname + '/public/images'));\napp.get('/', function (req, res) {\n  res.render('index');\n});\napp.get('/kontakt', function (req, res) {\n  res.render('kontakt');\n});\napp.get('/projekt', function (req, res) {\n  res.render('projekt');\n}); // blog.ejs\n\napp.get(\"/blog\", function (req, res) {\n  var posts = fs.readdirSync(__dirname + '/blog').filter(function (file) {\n    return file.endsWith('.md');\n  });\n  res.render(\"blog\", {\n    posts: posts,\n    matter: matter //title: file.data.title\n\n  });\n}); // post.ejs\n\napp.get('/blog/:article', function (req, res) {\n  var file = matter.read(__dirname + '/blog/' + req.params.article + '.md');\n  console.log(file);\n  console.log(req.params.article); // use markdown-it to convert content to HTML\n\n  var md = require(\"markdown-it\")();\n\n  var content = file.content;\n  var result = md.render(content);\n  res.render(\"post\", {\n    post: result,\n    title: file.data.title,\n    description: file.data.description,\n    slug: req.params.article,\n    image: file.data.image\n  });\n}); //router.use('/artiklar', articleRouter);\n\nvar matter = require('gray-matter');\n\napp.listen(port);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImFwcCIsInBhdGgiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJmcyIsInNldCIsImJvZHlQYXJzZXIiLCJ1c2UiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwiam9pbiIsIl9fZGlybmFtZSIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImdldCIsInJlcSIsInJlcyIsInJlbmRlciIsInBvc3RzIiwicmVhZGRpclN5bmMiLCJmaWx0ZXIiLCJmaWxlIiwiZW5kc1dpdGgiLCJtYXR0ZXIiLCJyZWFkIiwicGFyYW1zIiwiYXJ0aWNsZSIsImNvbnNvbGUiLCJsb2ciLCJtZCIsImNvbnRlbnQiLCJyZXN1bHQiLCJwb3N0IiwidGl0bGUiLCJkYXRhIiwiZGVzY3JpcHRpb24iLCJzbHVnIiwiaW1hZ2UiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxHQUFHLEdBQUdGLE9BQU8sRUFBbkI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNRyxNQUFNLEdBQUdKLE9BQU8sQ0FBQ0ssTUFBUixFQUFmOztBQUNBLElBQU1DLEVBQUUsR0FBR0wsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBRUFDLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGFBQVIsRUFBdUIsS0FBdkI7O0FBQ0EsSUFBTUMsVUFBVSxHQUFHUCxPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFDQUMsR0FBRyxDQUFDTyxHQUFKLENBQVFELFVBQVUsQ0FBQ0UsVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBQ0FULEdBQUcsQ0FBQ08sR0FBSixDQUFRRCxVQUFVLENBQUNJLElBQVgsRUFBUjtBQUNBVixHQUFHLENBQUNLLEdBQUosQ0FBUSxPQUFSLEVBQWlCSixJQUFJLENBQUNVLElBQUwsQ0FBVUMsU0FBVixFQUFxQixPQUFyQixDQUFqQjtBQUNBLElBQUlDLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBL0IsQyxDQUVBOztBQUNBaEIsR0FBRyxDQUFDTyxHQUFKLENBQVEsTUFBUixFQUFlVCxPQUFPLFVBQVAsQ0FBZWMsU0FBUyxHQUFHLGFBQTNCLENBQWY7QUFDQVosR0FBRyxDQUFDTyxHQUFKLENBQVEsS0FBUixFQUFjVCxPQUFPLFVBQVAsQ0FBZWMsU0FBUyxHQUFHLFlBQTNCLENBQWQ7QUFDQVosR0FBRyxDQUFDTyxHQUFKLENBQVEsVUFBUixFQUFtQlQsT0FBTyxVQUFQLENBQWVjLFNBQVMsR0FBRyxvQkFBM0IsQ0FBbkI7QUFDQVosR0FBRyxDQUFDTyxHQUFKLENBQVEsU0FBUixFQUFrQlQsT0FBTyxVQUFQLENBQWVjLFNBQVMsR0FBRyxnQkFBM0IsQ0FBbEI7QUFHQVosR0FBRyxDQUFDaUIsR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN6QkEsRUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsT0FBWDtBQUNELENBRkQ7QUFJQXBCLEdBQUcsQ0FBQ2lCLEdBQUosQ0FBUSxVQUFSLEVBQW9CLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2hDQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxTQUFYO0FBQ0QsQ0FGRDtBQUlBcEIsR0FBRyxDQUFDaUIsR0FBSixDQUFRLFVBQVIsRUFBb0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDaENBLEVBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLFNBQVg7QUFDRCxDQUZELEUsQ0FJQTs7QUFDQXBCLEdBQUcsQ0FBQ2lCLEdBQUosQ0FBUSxPQUFSLEVBQWlCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdCLE1BQU1FLEtBQUssR0FBR2pCLEVBQUUsQ0FBQ2tCLFdBQUgsQ0FBZVYsU0FBUyxHQUFHLE9BQTNCLEVBQW9DVyxNQUFwQyxDQUEyQyxVQUFBQyxJQUFJO0FBQUEsV0FBSUEsSUFBSSxDQUFDQyxRQUFMLENBQWMsS0FBZCxDQUFKO0FBQUEsR0FBL0MsQ0FBZDtBQUVBTixFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxNQUFYLEVBQW1CO0FBQ2pCQyxJQUFBQSxLQUFLLEVBQUVBLEtBRFU7QUFFakJLLElBQUFBLE1BQU0sRUFBRUEsTUFGUyxDQUdqQjs7QUFIaUIsR0FBbkI7QUFLRCxDQVJELEUsQ0FVQTs7QUFDQTFCLEdBQUcsQ0FBQ2lCLEdBQUosQ0FBUSxnQkFBUixFQUEwQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN0QyxNQUFNSyxJQUFJLEdBQUdFLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZZixTQUFTLEdBQUcsUUFBWixHQUF1Qk0sR0FBRyxDQUFDVSxNQUFKLENBQVdDLE9BQWxDLEdBQTRDLEtBQXhELENBQWI7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlQLElBQVo7QUFDQU0sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVliLEdBQUcsQ0FBQ1UsTUFBSixDQUFXQyxPQUF2QixFQUhzQyxDQUlwQzs7QUFDQSxNQUFJRyxFQUFFLEdBQUdqQyxPQUFPLENBQUMsYUFBRCxDQUFQLEVBQVQ7O0FBQ0EsTUFBSWtDLE9BQU8sR0FBR1QsSUFBSSxDQUFDUyxPQUFuQjtBQUNBLE1BQUlDLE1BQU0sR0FBR0YsRUFBRSxDQUFDWixNQUFILENBQVVhLE9BQVYsQ0FBYjtBQUNBZCxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxNQUFYLEVBQW1CO0FBQ2pCZSxJQUFBQSxJQUFJLEVBQUVELE1BRFc7QUFFakJFLElBQUFBLEtBQUssRUFBRVosSUFBSSxDQUFDYSxJQUFMLENBQVVELEtBRkE7QUFHakJFLElBQUFBLFdBQVcsRUFBRWQsSUFBSSxDQUFDYSxJQUFMLENBQVVDLFdBSE47QUFJakJDLElBQUFBLElBQUksRUFBRXJCLEdBQUcsQ0FBQ1UsTUFBSixDQUFXQyxPQUpBO0FBS2pCVyxJQUFBQSxLQUFLLEVBQUVoQixJQUFJLENBQUNhLElBQUwsQ0FBVUc7QUFMQSxHQUFuQjtBQU9ILENBZkQsRSxDQWtCQTs7QUFFQSxJQUFNZCxNQUFNLEdBQUczQixPQUFPLENBQUMsYUFBRCxDQUF0Qjs7QUFFQUMsR0FBRyxDQUFDeUMsTUFBSixDQUFXNUIsSUFBWCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQ3J5bWVhdC9EZXNrdG9wL0NvZGUvY3YvcHJlc2VudGF0aW9uLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuXG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdlanMnKVxuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoXCJib2R5LXBhcnNlclwiKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICd2aWV3cycpKTtcbmxldCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA1MDAwO1xuXG4vL2FwcC51c2UoJy9hcnRpa2xhcicsIGFydGljbGVSb3V0ZXIpXG5hcHAudXNlKCcvY3NzJyxleHByZXNzLnN0YXRpYyhfX2Rpcm5hbWUgKyAnL3B1YmxpYy9jc3MnKSk7XG5hcHAudXNlKCcvanMnLGV4cHJlc3Muc3RhdGljKF9fZGlybmFtZSArICcvcHVibGljL2pzJykpO1xuYXBwLnVzZSgnL21vZHVsZXMnLGV4cHJlc3Muc3RhdGljKF9fZGlybmFtZSArICcvcHVibGljL2pzL21vZHVsZXMnKSk7XG5hcHAudXNlKCcvaW1hZ2VzJyxleHByZXNzLnN0YXRpYyhfX2Rpcm5hbWUgKyAnL3B1YmxpYy9pbWFnZXMnKSk7XG5cblxuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICByZXMucmVuZGVyKCdpbmRleCcpO1xufSlcblxuYXBwLmdldCgnL2tvbnRha3QnLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnJlbmRlcigna29udGFrdCcpO1xufSlcblxuYXBwLmdldCgnL3Byb2pla3QnLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnJlbmRlcigncHJvamVrdCcpO1xufSlcblxuLy8gYmxvZy5lanNcbmFwcC5nZXQoXCIvYmxvZ1wiLCAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgcG9zdHMgPSBmcy5yZWFkZGlyU3luYyhfX2Rpcm5hbWUgKyAnL2Jsb2cnKS5maWx0ZXIoZmlsZSA9PiBmaWxlLmVuZHNXaXRoKCcubWQnKSk7XG4gIFxuICByZXMucmVuZGVyKFwiYmxvZ1wiLCB7XG4gICAgcG9zdHM6IHBvc3RzLFxuICAgIG1hdHRlcjogbWF0dGVyXG4gICAgLy90aXRsZTogZmlsZS5kYXRhLnRpdGxlXG4gIH0pO1xufSk7XG5cbi8vIHBvc3QuZWpzXG5hcHAuZ2V0KCcvYmxvZy86YXJ0aWNsZScsIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBmaWxlID0gbWF0dGVyLnJlYWQoX19kaXJuYW1lICsgJy9ibG9nLycgKyByZXEucGFyYW1zLmFydGljbGUgKyAnLm1kJyk7XG4gIGNvbnNvbGUubG9nKGZpbGUpO1xuICBjb25zb2xlLmxvZyhyZXEucGFyYW1zLmFydGljbGUpO1xuICAgIC8vIHVzZSBtYXJrZG93bi1pdCB0byBjb252ZXJ0IGNvbnRlbnQgdG8gSFRNTFxuICAgIHZhciBtZCA9IHJlcXVpcmUoXCJtYXJrZG93bi1pdFwiKSgpO1xuICAgIGxldCBjb250ZW50ID0gZmlsZS5jb250ZW50O1xuICAgIHZhciByZXN1bHQgPSBtZC5yZW5kZXIoY29udGVudCk7XG4gICAgcmVzLnJlbmRlcihcInBvc3RcIiwge1xuICAgICAgcG9zdDogcmVzdWx0LFxuICAgICAgdGl0bGU6IGZpbGUuZGF0YS50aXRsZSxcbiAgICAgIGRlc2NyaXB0aW9uOiBmaWxlLmRhdGEuZGVzY3JpcHRpb24sXG4gICAgICBzbHVnOiByZXEucGFyYW1zLmFydGljbGUsXG4gICAgICBpbWFnZTogZmlsZS5kYXRhLmltYWdlXG4gICAgfSk7XG59KVxuXG5cbi8vcm91dGVyLnVzZSgnL2FydGlrbGFyJywgYXJ0aWNsZVJvdXRlcik7XG5cbmNvbnN0IG1hdHRlciA9IHJlcXVpcmUoJ2dyYXktbWF0dGVyJyk7XG5cbmFwcC5saXN0ZW4ocG9ydCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "path",
        "router",
        "Router",
        "fs",
        "set",
        "bodyParser",
        "use",
        "urlencoded",
        "extended",
        "json",
        "join",
        "__dirname",
        "port",
        "process",
        "env",
        "PORT",
        "get",
        "req",
        "res",
        "render",
        "posts",
        "readdirSync",
        "filter",
        "file",
        "endsWith",
        "matter",
        "read",
        "params",
        "article",
        "console",
        "log",
        "md",
        "content",
        "result",
        "post",
        "title",
        "data",
        "description",
        "slug",
        "image",
        "listen"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,IAAMG,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AACA,IAAMC,EAAE,GAAGL,OAAO,CAAC,IAAD,CAAlB;;AAEAC,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AACA,IAAMC,UAAU,GAAGP,OAAO,CAAC,aAAD,CAA1B;;AACAC,GAAG,CAACO,GAAJ,CAAQD,UAAU,CAACE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAT,GAAG,CAACO,GAAJ,CAAQD,UAAU,CAACI,IAAX,EAAR;AACAV,GAAG,CAACK,GAAJ,CAAQ,OAAR,EAAiBJ,IAAI,CAACU,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACA,IAAIC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B,C,CAEA;;AACAhB,GAAG,CAACO,GAAJ,CAAQ,MAAR,EAAeT,OAAO,UAAP,CAAec,SAAS,GAAG,aAA3B,CAAf;AACAZ,GAAG,CAACO,GAAJ,CAAQ,KAAR,EAAcT,OAAO,UAAP,CAAec,SAAS,GAAG,YAA3B,CAAd;AACAZ,GAAG,CAACO,GAAJ,CAAQ,UAAR,EAAmBT,OAAO,UAAP,CAAec,SAAS,GAAG,oBAA3B,CAAnB;AACAZ,GAAG,CAACO,GAAJ,CAAQ,SAAR,EAAkBT,OAAO,UAAP,CAAec,SAAS,GAAG,gBAA3B,CAAlB;AAGAZ,GAAG,CAACiB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX;AACD,CAFD;AAIApB,GAAG,CAACiB,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,SAAX;AACD,CAFD;AAIApB,GAAG,CAACiB,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,SAAX;AACD,CAFD,E,CAIA;;AACApB,GAAG,CAACiB,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,MAAME,KAAK,GAAGjB,EAAE,CAACkB,WAAH,CAAeV,SAAS,GAAG,OAA3B,EAAoCW,MAApC,CAA2C,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,QAAL,CAAc,KAAd,CAAJ;AAAA,GAA/C,CAAd;AAEAN,EAAAA,GAAG,CAACC,MAAJ,CAAW,MAAX,EAAmB;AACjBC,IAAAA,KAAK,EAAEA,KADU;AAEjBK,IAAAA,MAAM,EAAEA,MAFS,CAGjB;;AAHiB,GAAnB;AAKD,CARD,E,CAUA;;AACA1B,GAAG,CAACiB,GAAJ,CAAQ,gBAAR,EAA0B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACtC,MAAMK,IAAI,GAAGE,MAAM,CAACC,IAAP,CAAYf,SAAS,GAAG,QAAZ,GAAuBM,GAAG,CAACU,MAAJ,CAAWC,OAAlC,GAA4C,KAAxD,CAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYb,GAAG,CAACU,MAAJ,CAAWC,OAAvB,EAHsC,CAIpC;;AACA,MAAIG,EAAE,GAAGjC,OAAO,CAAC,aAAD,CAAP,EAAT;;AACA,MAAIkC,OAAO,GAAGT,IAAI,CAACS,OAAnB;AACA,MAAIC,MAAM,GAAGF,EAAE,CAACZ,MAAH,CAAUa,OAAV,CAAb;AACAd,EAAAA,GAAG,CAACC,MAAJ,CAAW,MAAX,EAAmB;AACjBe,IAAAA,IAAI,EAAED,MADW;AAEjBE,IAAAA,KAAK,EAAEZ,IAAI,CAACa,IAAL,CAAUD,KAFA;AAGjBE,IAAAA,WAAW,EAAEd,IAAI,CAACa,IAAL,CAAUC,WAHN;AAIjBC,IAAAA,IAAI,EAAErB,GAAG,CAACU,MAAJ,CAAWC,OAJA;AAKjBW,IAAAA,KAAK,EAAEhB,IAAI,CAACa,IAAL,CAAUG;AALA,GAAnB;AAOH,CAfD,E,CAkBA;;AAEA,IAAMd,MAAM,GAAG3B,OAAO,CAAC,aAAD,CAAtB;;AAEAC,GAAG,CAACyC,MAAJ,CAAW5B,IAAX",
      "sourceRoot": "/Users/Crymeat/Desktop/Code/cv/presentation/",
      "sourcesContent": [
        "const express = require('express');\nconst app = express();\nconst path = require('path')\nconst router = express.Router();\nconst fs = require('fs');\n\napp.set('view engine', 'ejs')\nconst bodyParser = require(\"body-parser\");\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.set('views', path.join(__dirname, 'views'));\nlet port = process.env.PORT || 5000;\n\n//app.use('/artiklar', articleRouter)\napp.use('/css',express.static(__dirname + '/public/css'));\napp.use('/js',express.static(__dirname + '/public/js'));\napp.use('/modules',express.static(__dirname + '/public/js/modules'));\napp.use('/images',express.static(__dirname + '/public/images'));\n\n\napp.get('/', (req, res) => {\n  res.render('index');\n})\n\napp.get('/kontakt', (req, res) => {\n  res.render('kontakt');\n})\n\napp.get('/projekt', (req, res) => {\n  res.render('projekt');\n})\n\n// blog.ejs\napp.get(\"/blog\", (req, res) => {\n  const posts = fs.readdirSync(__dirname + '/blog').filter(file => file.endsWith('.md'));\n  \n  res.render(\"blog\", {\n    posts: posts,\n    matter: matter\n    //title: file.data.title\n  });\n});\n\n// post.ejs\napp.get('/blog/:article', (req, res) => {\n  const file = matter.read(__dirname + '/blog/' + req.params.article + '.md');\n  console.log(file);\n  console.log(req.params.article);\n    // use markdown-it to convert content to HTML\n    var md = require(\"markdown-it\")();\n    let content = file.content;\n    var result = md.render(content);\n    res.render(\"post\", {\n      post: result,\n      title: file.data.title,\n      description: file.data.description,\n      slug: req.params.article,\n      image: file.data.image\n    });\n})\n\n\n//router.use('/artiklar', articleRouter);\n\nconst matter = require('gray-matter');\n\napp.listen(port);"
      ]
    },
    "sourceType": "script",
    "mtime": 1602224443411
  }
}